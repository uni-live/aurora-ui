@use 'sass:map';

@use '../../design/shared.scss' as *;

@include b(button) {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  line-height: 1;
  white-space: nowrap;
  color: getCssVar('button', 'text-color');
  text-align: center;
  box-sizing: border-box;
  transition: 0.1s;
  vertical-align: middle;
  background: getCssVar('button', 'color');
  border: getCssVar('button', 'border');
  border-radius: getCssVar('button', 'border-radius');
  position: relative;

  @include utils-clear-after-border;

  > text {
    display: inline-flex;
    align-items: center;
    color: inherit;
  }

  @include when(disabled) {
    background-color: getCssVar('button', 'color-disabled');
    color: getCssVar('button', 'text-color-disabled');
    border: getCssVar('button', 'border-disabled');
    opacity: getCssVar('button', 'opacity-disabled');
  }

  @include when(active) {
    color: getCssVar('button', 'text-color-pressed');
    background-color: getCssVar('button', 'color-pressed');
    border: getCssVar('button', 'border-pressed');
  }

  &.is-linear.is-active {
    opacity: getCssVar('button', 'opacity-disabled');
  }

  @each $size in (large, medium, small, mini) {
    @include m($size) {
      padding: getCssVar('button', 'padding');
      font-size: getCssVar('button', 'font-size');
      height: getCssVar('button', 'height');
      width: getCssVar('button', 'width');
    }
  }
}
