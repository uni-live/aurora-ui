@use 'sass:math';
@use 'sass:map';
@use '../mixins/function' as *;

$types: primary, success, warning, danger, info;
$colors: () !default;
$colors: map.merge(
  (
    'white': #fff,
    'black': #000,
    'primary': (
      'base': #409eff,
    ),
    'success': (
      'base': #67c23a,
    ),
    'warning': (
      'base': #e6a23c,
    ),
    'danger': (
      'base': #f56c6c,
    ),
    'info': (
      'base': #909399,
    ),
  ),
  $colors
);
$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

// https://sass-lang.com/documentation/values/maps#immutability
@mixin set-color-mix-level($type, $number, $mode: 'light', $mix-color: $color-white) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}':
          mix($mix-color, map.get($colors, $type, 'base'), math.percentage(math.div($number, 10))),
      ),
    ),
    $colors
  ) !global;
}

// $colors.primary.light-i
// --etfma-color-primary-light-i
// 10% 53a8ff
// 20% 66b1ff
// 30% 79bbff
// 40% 8cc5ff
// 50% a0cfff
// 60% b3d8ff
// 70% c6e2ff
// 80% d9ecff
// 90% ecf5ff
@each $type in $types {
  @for $i from 1 through 9 {
    @include set-color-mix-level($type, $i, 'light', $color-white);
  }
}

@each $type in $types {
  @include set-color-mix-level($type, 2, 'dark', $color-black);
}

// text
$text-color: () !default;
$text-color: map.merge(
  (
    'primary': #303133,
    'regular': #606266,
    'secondary': #909399,
    'placeholder': #a8abb2,
    'disabled': #c0c4cc,
  ),
  $text-color
);
$font-family: () !default;
$font-family: map.merge(
  (
    '':
      "'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', '微软雅黑', Arial, sans-serif",
  ),
  $font-family
);
$font-size: () !default;
$font-size: map.merge(
  (
    'large': 16px,
    'base': 14px,
    'small': 12px,
    'mini': 10px,
  ),
  $font-size
);

// border
$border-color: () !default;
$border-color: map.merge(
  (
    '': #dcdfe6,
    'light': #e4e7ed,
    'lighter': #ebeef5,
    'extra-light': #f2f6fc,
    'dark': #d4d7de,
    'darker': #cdd0d6,
  ),
  $border-color
);
$border-radius: () !default;
$border-radius: map.merge(
  (
    'base': 4px,
    'small': 2px,
    'round': 20px,
    'circle': 100%,
  ),
  $border-radius
);

// fill
$fill-color: () !default;
$fill-color: map.merge(
  (
    '': #f0f2f5,
    'light': #f5f7fa,
    'lighter': #fafafa,
    'extra-light': #fafcff,
    'dark': #ebedf0,
    'darker': #e6e8eb,
    'blank': #fff,
  ),
  $fill-color
);

// Background
$bg-color: () !default;
$bg-color: map.merge(
  (
    '': #fff,
    'page': #f2f3f5,
    'overlay': #fff,
  ),
  $bg-color
);

// Border
$border-width: 1px !default;
$border-style: solid !default;
$border-color-hover: getCssVar('text-color', 'disabled') !default;
$border-radius: () !default;
$border-radius: map.merge(
  (
    'base': 16rpx,
    'small': 8rpx,
    'round': 32rpx,
    'circle': 100%,
  ),
  $border-radius
);

// Box-shadow
$box-shadow: () !default;
$box-shadow: map.merge(
  (
    '': (
      0 12px 32px 4px rgb(0 0 0 / 4%),
      0 8px 20px rgb(0 0 0 / 8%),
    ),
    'light': (
      0 0 12px rgb(0 0 0 / 12%),
    ),
    'lighter': (
      0 0 6px rgb(0 0 0 / 12%),
    ),
    'dark': (
      0 16px 48px 16px rgb(0 0 0 / 8%),
      0 12px 32px rgb(0 0 0 / 12%),
      0 8px 16px -8px rgb(0 0 0 / 16%),
    ),
  ),
  $box-shadow
);

// overlay
$overlay-color: () !default;
$overlay-color: map.merge(
  (
    '': rgb(0 0 0 / 80%),
    'light': rgb(0 0 0 / 70%),
    'lighter': rgb(0 0 0 / 50%),
  ),
  $overlay-color
);

// mask
$mask-color: () !default;
$mask-color: map.merge(
  (
    '': rgb(255 255 255 / 90%),
    'extra-light': rgb(255 255 255 / 30%),
  ),
  $mask-color
);

// zIndex
$z-index: () !default;
$z-index: map.merge(
  (
    'normal': 1,
    'top': 1000,
    'popper': 2000,
  ),
  $z-index
);

// Disable default
$disabled: () !default;
$disabled: map.merge(
  (
    'bg-color': getCssVar('fill-color', 'light'),
    'text-color': getCssVar('text-color', 'placeholder'),
    'border-color': getCssVar('border-color', 'light'),
  ),
  $disabled
);

$active: () !default;
$active: map.merge(
  (
    'bg-color': #000,
    'text-color': #000,
    'border-color': #000,
  ),
  $active
);

// Button
$button: () !default;
$button: map.merge(
  (
    'border-color': getCssVar('border-color'),
    'bg-color': getCssVar('fill-color', 'blank'),
    'text-color': getCssVar('text-color', 'regular'),
    'active-text-color': getCssVar('button', 'active-text-color'),
    'active-border-color': getCssVar('button', 'border-color'),
    'active-bg-color': getCssVar('button', 'active-bg-color'),
    'active-color': getCssVar('text-color', 'primary'),
  ),
  $button
);

$button-border-width: $border-width !default;

$button-border-color: () !default;
$button-bg-color: () !default;
$button-text-color: () !default;

@each $type in $types {
  $button-border-color: map.merge(
    (
      $type: map.get($colors, $type, 'base'),
    ),
    $button-border-color
  ) !global;

  $button-bg-color: map.merge(
    (
      $type: map.get($colors, $type, 'base'),
    ),
    $button-bg-color
  ) !global;
}

$button-font-size: () !default;
$button-font-size: map.merge(
  (
    'large': getCssVar('font-size', 'large'),
    'default': getCssVar('font-size', 'base'),
    'small': getCssVar('font-size', 'small'),
    'mini': getCssVar('font-size', 'mini'),
  ),
  $button-font-size
);

$button-width: () !default;
$button-width: map.merge(
  (
    'large': 100%,
    'default': 400rpx,
    'small': 200rpx,
    'mini': 120rpx,
  ),
  $button-width
);

$button-height: () !default;
$button-height: map.merge(
  (
    'large': 96rpx,
    'default': 84rpx,
    'small': 72rpx,
    'mini': 64rpx,
  ),
  $button-height
);

$button-padding-vertical: () !default;
$button-padding-vertical: map.merge(
  (
    'large': 30rpx,
    'default': 24rpx,
    'small': 16rpx,
    'mini': 8rpx,
  ),
  $button-padding-vertical
);

$button-padding-horizontal: () !default;
$button-padding-horizontal: map.merge(
  (
    'large': 0,
    'default': 0,
    'small': 0,
    'mini': 0,
  ),
  $button-padding-horizontal
);

// Loading
$loading: () !default;
$loading: map.merge(
  (
    'icon-color': rgb(200, 200, 200),
    'size': 48rpx,
    'max-size': 100%,

    'semicircle-border-width': 4rpx,
    'semicircle-border-color': rgb(200, 200, 200),
    'semicircle-border-radius': 200rpx,
    'semicircle-border-style': solid,

    'circle-border-width': 4rpx,
    'circle-border-color': rgb(200, 200, 200),
    'circle-border-radius': 200rpx,
    'circle-border-style': solid,

    'host-font-size': 0,
    'host-line-height': 1,

    'dot-top': 0,
    'dot-left': 0,
    'dot-width': 100%,
    'dot-height': 100%,
    'dot-before-width': 4rpx,
    'dot-before-height': 25%,
    'dot-before-margin': 0 auto,
    'dot-before-background-color': currentColor,
    'dot-before-border-radius': 40%,
  ),
  $button
);
